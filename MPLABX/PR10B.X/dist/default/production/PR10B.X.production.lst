

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Tue Jul 14 14:55:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000D                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0013                     	;# 
    30  0014                     	;# 
    31  0015                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0017                     	;# 
    35  0018                     	;# 
    36  0019                     	;# 
    37  001A                     	;# 
    38  001B                     	;# 
    39  001B                     	;# 
    40  001C                     	;# 
    41  001D                     	;# 
    42  001E                     	;# 
    43  001F                     	;# 
    44  0081                     	;# 
    45  0085                     	;# 
    46  0086                     	;# 
    47  0087                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0091                     	;# 
    52  0092                     	;# 
    53  0093                     	;# 
    54  0094                     	;# 
    55  0098                     	;# 
    56  0099                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  009F                     	;# 
    61  010C                     	;# 
    62  010D                     	;# 
    63  010E                     	;# 
    64  010F                     	;# 
    65  018C                     	;# 
    66  018D                     	;# 
    67                           
    68                           	psect	idataCOMMON
    69  0785                     __pidataCOMMON:	
    70                           
    71                           ;initializer for _temp
    72  0785  3432               	retlw	50
    73  0017                     _CCP1CON	set	23
    74  0015                     _CCPR1L	set	21
    75  0012                     _T2CON	set	18
    76  0029                     _RA1	set	41
    77  002A                     _RA2	set	42
    78  002B                     _RA3	set	43
    79  002C                     _RA4	set	44
    80  0031                     _RB1	set	49
    81  0032                     _RB2	set	50
    82  009F                     _ADCON1	set	159
    83  0092                     _PR2	set	146
    84  0085                     _TRISA	set	133
    85  0086                     _TRISB	set	134
    86  0087                     _TRISC	set	135
    87                           
    88                           ; #config settings
    89  0000                     
    90                           	psect	cinit
    91  07F8                     start_initialization:	
    92  07F8                     __initialization:	
    93                           
    94                           ; Initialize objects allocated to COMMON
    95  07F8  120A  118A  2785   	fcall	__pidataCOMMON	;fetch initializer
    96  07FB  00F9               	movwf	__pdataCOMMON& (0+127)
    97  07FC                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  07FC                     __end_of__initialization:	
   101  07FC  0183               	clrf	3
   102  07FD  120A  118A  2FA9   	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	dataCOMMON
   105  0079                     __pdataCOMMON:	
   106  0079                     _temp:	
   107  0079                     	ds	1
   108                           
   109                           	psect	cstackCOMMON
   110  0070                     __pcstackCOMMON:	
   111  0070                     ?_delay:	
   112  0070                     ?_main:	
   113                           ; 0 bytes @ 0x0
   114                           
   115  0070                     delay@data:	
   116                           ; 0 bytes @ 0x0
   117                           
   118                           
   119                           ; 4 bytes @ 0x0
   120  0070                     	ds	4
   121  0074                     ??_delay:	
   122                           
   123                           ; 0 bytes @ 0x4
   124  0074                     	ds	4
   125  0078                     ??_main:	
   126                           
   127                           ; 0 bytes @ 0x8
   128  0078                     	ds	1
   129                           
   130                           	psect	maintext
   131  07A9                     __pmaintext:	
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 54 in file "../../Source file/PR10.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;		None               void
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, pclath, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 17F/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   151 ;;      Params:         0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0
   153 ;;      Temps:          1       0       0       0       0
   154 ;;      Totals:         1       0       0       0       0
   155 ;;Total ram usage:        1 bytes
   156 ;; Hardware stack levels required when called:    1
   157 ;; This function calls:
   158 ;;		_delay
   159 ;; This function is called by:
   160 ;;		Startup code after reset
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           
   165                           ;psect for function _main
   166  07A9                     _main:	
   167                           
   168                           ;PR10.c: 56: ADCON1 = 0x06;
   169                           
   170                           ;incstack = 0
   171                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   172  07A9  3006               	movlw	6
   173  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   174  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   175  07AC  009F               	movwf	31	;volatile
   176                           
   177                           ;PR10.c: 58: TRISA = 0b11111111;
   178  07AD  30FF               	movlw	255
   179  07AE  0085               	movwf	5	;volatile
   180                           
   181                           ;PR10.c: 59: TRISB = 0b00000000;
   182  07AF  0186               	clrf	6	;volatile
   183                           
   184                           ;PR10.c: 60: TRISC = 0b11000000;
   185  07B0  30C0               	movlw	192
   186  07B1  0087               	movwf	7	;volatile
   187                           
   188                           ;PR10.c: 62: CCP1CON = 0b00001100;
   189  07B2  300C               	movlw	12
   190  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   191  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   192  07B5  0097               	movwf	23	;volatile
   193                           
   194                           ;PR10.c: 65: PR2 = 0xFF;
   195  07B6  30FF               	movlw	255
   196  07B7  1683               	bsf	3,5	;RP0=1, select bank1
   197  07B8  1303               	bcf	3,6	;RP1=0, select bank1
   198  07B9  0092               	movwf	18	;volatile
   199                           
   200                           ;PR10.c: 66: T2CON = 0b00000101;
   201  07BA  3005               	movlw	5
   202  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   203  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   204  07BD  0092               	movwf	18	;volatile
   205  07BE                     l538:	
   206                           ;PR10.c: 71: RB1 = 0;
   207                           
   208                           ;PR10.c: 70: RB2 = 0;
   209                           
   210                           ;PR10.c: 69: CCPR1L = 0;
   211                           
   212                           
   213                           ;PR10.c: 76: {
   214                           ;PR10.c: 77: CCPR1L=0;
   215  07BE  0195               	clrf	21	;volatile
   216                           
   217                           ;PR10.c: 78: RB2=0;
   218  07BF  1106               	bcf	6,2	;volatile
   219  07C0  2FCF               	goto	L1
   220  07C1                     l39:	
   221                           ;PR10.c: 83: {
   222                           ;PR10.c: 84: while(RA2==0)continue;
   223                           
   224                           ;PR10.c: 80: }
   225                           
   226                           ;PR10.c: 79: RB1=0;
   227                           
   228  07C1  1D05               	btfss	5,2	;volatile
   229  07C2  2FC1               	goto	l39
   230                           
   231                           ;PR10.c: 85: CCPR1L=temp;
   232  07C3  0879               	movf	_temp,w
   233  07C4  0095               	movwf	21	;volatile
   234                           
   235                           ;PR10.c: 86: RB2=!RB2;
   236  07C5  3004               	movlw	4
   237  07C6  0686               	xorwf	6,f
   238                           
   239                           ;PR10.c: 87: RB1=!RB2;
   240  07C7  1906               	btfsc	6,2	;volatile
   241  07C8  2FCD               	goto	u70
   242  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   243  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   244  07CB  1486               	bsf	6,1	;volatile
   245  07CC  2FE8               	goto	l536
   246  07CD                     u70:	
   247  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   248  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   249  07CF                     L1:	
   250  07CF  1086               	bcf	6,1	;volatile
   251                           
   252                           ;PR10.c: 88: }
   253  07D0  2FE8               	goto	l536
   254  07D1                     l550:	
   255                           
   256                           ;PR10.c: 91: {
   257                           ;PR10.c: 92: if(temp<255)temp+=1;
   258  07D1  0879               	movf	_temp,w
   259  07D2  3AFF               	xorlw	255
   260  07D3  1903               	skipnz
   261  07D4  2FD9               	goto	l554
   262  07D5  3001               	movlw	1
   263  07D6  00F8               	movwf	??_main
   264  07D7  0878               	movf	??_main,w
   265  07D8  07F9               	addwf	_temp,f
   266  07D9                     l554:	
   267                           
   268                           ;PR10.c: 93: CCPR1L=temp;
   269  07D9  0879               	movf	_temp,w
   270  07DA  0095               	movwf	21	;volatile
   271                           
   272                           ;PR10.c: 94: delay(5000);
   273  07DB  3000               	movlw	0
   274  07DC  00F3               	movwf	?_delay+3
   275  07DD  3000               	movlw	0
   276  07DE  00F2               	movwf	?_delay+2
   277  07DF  3013               	movlw	19
   278  07E0  00F1               	movwf	?_delay+1
   279  07E1  3088               	movlw	136
   280  07E2  00F0               	movwf	?_delay
   281  07E3  120A  118A  2786   	fcall	_delay
      +       120A  118A         
   282  07E8                     l536:	
   283                           ;PR10.c: 73: while(1)
   284                           
   285                           ;PR10.c: 95: }
   286                           
   287                           
   288                           ;PR10.c: 74: {
   289                           ;PR10.c: 75: if(RA1==0)
   290  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   291  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   292  07EA  1C85               	btfss	5,1	;volatile
   293  07EB  2FBE               	goto	l538
   294                           
   295                           ;PR10.c: 82: else if(RA2==0)
   296  07EC  1D05               	btfss	5,2	;volatile
   297  07ED  2FC1               	goto	l39
   298                           
   299                           ;PR10.c: 90: else if(RA3==0)
   300  07EE  1D85               	btfss	5,3	;volatile
   301  07EF  2FD1               	goto	l550
   302                           
   303                           ;PR10.c: 97: else if(RA4==0)
   304  07F0  1A05               	btfsc	5,4	;volatile
   305  07F1  2FE8               	goto	l536
   306                           
   307                           ;PR10.c: 98: {
   308                           ;PR10.c: 99: if(temp>0)temp-=1;
   309  07F2  0879               	movf	_temp,w
   310  07F3  1903               	btfsc	3,2
   311  07F4  2FD9               	goto	l554
   312  07F5  3001               	movlw	1
   313  07F6  02F9               	subwf	_temp,f
   314  07F7  2FD9               	goto	l554
   315  07F8                     __end_of_main:	
   316                           ;PR10.c: 101: delay(5000);
   317                           
   318                           ;PR10.c: 100: CCPR1L=temp;
   319                           
   320                           
   321                           	psect	text1
   322  0786                     __ptext1:	
   323 ;; *************** function _delay *****************
   324 ;; Defined at:
   325 ;;		line 109 in file "../../Source file/PR10.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;  data            4    0[COMMON] unsigned long 
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;		None               void
   332 ;; Registers used:
   333 ;;		wreg
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   339 ;;      Params:         4       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0
   341 ;;      Temps:          4       0       0       0       0
   342 ;;      Totals:         8       0       0       0       0
   343 ;;Total ram usage:        8 bytes
   344 ;; Hardware stack levels used:    1
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           
   353                           ;psect for function _delay
   354  0786                     _delay:	
   355                           
   356                           ;PR10.c: 110: for( ;data>0;data-=1);
   357                           
   358                           ;incstack = 0
   359                           ; Regs used in _delay: [wreg]
   360  0786  0873               	movf	delay@data+3,w
   361  0787  0472               	iorwf	delay@data+2,w
   362  0788  0471               	iorwf	delay@data+1,w
   363  0789  0470               	iorwf	delay@data,w
   364  078A  1903               	btfsc	3,2
   365  078B  0008               	return
   366  078C  3001               	movlw	1
   367  078D  00F4               	movwf	??_delay
   368  078E  3000               	movlw	0
   369  078F  00F5               	movwf	??_delay+1
   370  0790  3000               	movlw	0
   371  0791  00F6               	movwf	??_delay+2
   372  0792  3000               	movlw	0
   373  0793  00F7               	movwf	??_delay+3
   374  0794  0874               	movf	??_delay,w
   375  0795  02F0               	subwf	delay@data,f
   376  0796  0875               	movf	??_delay+1,w
   377  0797  1C03               	skipc
   378  0798  0F75               	incfsz	??_delay+1,w
   379  0799  2F9B               	goto	u25
   380  079A  2F9C               	goto	u26
   381  079B                     u25:	
   382  079B  02F1               	subwf	delay@data+1,f
   383  079C                     u26:	
   384  079C  0876               	movf	??_delay+2,w
   385  079D  1C03               	skipc
   386  079E  0F76               	incfsz	??_delay+2,w
   387  079F  2FA1               	goto	u27
   388  07A0  2FA2               	goto	u28
   389  07A1                     u27:	
   390  07A1  02F2               	subwf	delay@data+2,f
   391  07A2                     u28:	
   392  07A2  0877               	movf	??_delay+3,w
   393  07A3  1C03               	skipc
   394  07A4  0F77               	incfsz	??_delay+3,w
   395  07A5  2FA7               	goto	u29
   396  07A6  2F86               	goto	_delay
   397  07A7                     u29:	
   398  07A7  02F3               	subwf	delay@data+3,f
   399  07A8  2F86               	goto	_delay
   400  07A9                     __end_of_delay:	
   401  007E                     btemp	set	126	;btemp
   402  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              8 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                8     4      4      30
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       1       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Tue Jul 14 14:55:05 2015

            __CFG_CP$OFF 0000                       l39 07C1                       u25 079B  
                     u26 079C                       u27 07A1                       u28 07A2  
                     u29 07A7                       u70 07CD                      l550 07D1  
                    l536 07E8                      l554 07D9                      l538 07BE  
                    _RA1 0029                      _RA2 002A                      _RB1 0031  
                    _RA3 002B                      _RB2 0032                      _RA4 002C  
                    _PR2 0092             __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 07A9  
                   _temp 0079                     btemp 007E                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _T2CON 0012  
         __CFG_DEBUG$OFF 0000                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087            __CFG_PWRTE$ON 0000                    _delay 0786  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 07F8                   ??_main 0078  
                 ?_delay 0070                   _ADCON1 009F                   _CCPR1L 0015  
           __pdataCOMMON 0079  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 07A9                  ??_delay 0074               __pmaintext 07A9  
                _CCP1CON 0017                  __ptext1 0786     end_of_initialization 07FC  
          __pidataCOMMON 0785      start_initialization 07F8           __size_of_delay 0023  
              delay@data 0070            __size_of_main 004F  
